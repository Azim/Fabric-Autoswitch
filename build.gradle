buildscript {
	repositories {
		jcenter()
	}
}

plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id "com.github.fudge.forgedflowerloom" version "2.0.0"
	id 'maven-publish'
	id 'musical-code' version '1.0'
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.thebrokenrail.com' }
}

musicalCode {
	config 'musical-config.txt'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

//noinspection SpellCheckingInspection
dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//OWNER library
	implementation "org.aeonbits.owner:owner:1.0.10"
	include "org.aeonbits.owner:owner:1.0.10"

	modApi 'com.github.dexman545:autoswitch-api:-SNAPSHOT'
	include 'com.github.dexman545:autoswitch-api:-SNAPSHOT'

	// Mod Compat

	// ModMenu
	modCompileOnly("io.github.prospector:modmenu:${project.modmenu_version}") {
		transitive = false
	}
	/*modRuntime("io.github.prospector:modmenu:${project.modmenu_version}") {
		transitive = false
	}*/

	// ModUpdater
	modCompileOnly "com.thebrokenrail:modupdater:${project.modupdater_version}"

}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

compileJava {
	options.release.set(8)
	options.incremental = true
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		//noinspection GroovyAssignabilityCheck
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			//noinspection GroovyAssignabilityCheck
			artifact(remapJar) {
				//noinspection GroovyAssignabilityCheck
				builtBy remapJar
			}
			//noinspection GroovyAssignabilityCheck
			artifact(sourcesJar) {
				//noinspection GroovyAssignabilityCheck
				builtBy remapSourcesJar
			}
		}
	}
}

// configure the maven publication
publishing {
	// select the repositories you want to publish to
	repositories {
		maven {
			credentials {
				username System.getenv("GITHUB_ACTOR")
				password System.getenv("GITHUB_TOKEN")
			}
			name = "GitHubPackages"
			url = "https://maven.pkg.github.com/" + "dexman545/Fabric-Autoswitch"
		}
	}
}
